name: Build Image

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: [linux-arm-v7, linux-arm64, linux-amd64]
    outputs:
      time: ${{ steps.vars.outputs.time }}

    steps:
      - uses: actions/checkout@v3
      - name: Create VARS
        id: vars
        run: |
          {
            ARCHITECTURE=${{ matrix.architecture }}
            echo "name=platform::${ARCHITECTURE//-/\/}"
            echo "name=repo::$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')"
            echo "file=${ARCHITECTURE#*-}"
            echo "name=time::$(date --utc +%Y-%m-%d_%H)"
            echo "name=source::${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${GITHUB_REF//refs\/heads\//}"
            echo "name=url::${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/master/README.md"
            echo "name=tag::$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]'):${{ matrix.architecture }}"
          } >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: tronyx
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          attests: type=sbom,generator=docker/buildkit-syft-scanner
          provenance: true
          platforms: ${{ steps.vars.outputs.platform }}
          file: ./Dockerfile.${{ steps.vars.outputs.file }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ steps.vars.outputs.tag }}
          labels: |
            org.opencontainers.image.created=${{ steps.vars.outputs.time }}
            org.opencontainers.image.title=${{ steps.vars.outputs.repo }}
            org.opencontainers.image.source=${{ steps.vars.outputs.source }}
            org.opencontainers.image.url=${{ steps.vars.outputs.url }}

  publish:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: tronyx
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifests for DockerHub
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=${IMAGE}:${GITHUB_REF//refs\/heads\//}
          
          docker buildx imagetools create -t ${IMAGE}:${{ needs.build.outputs.time }}    ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          
          if [[ ${GITHUB_REF//refs\/heads\//} == master ]]; then
            docker buildx imagetools create -t ${IMAGE}:latest                           ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          fi

          if [[ ${GITHUB_REF//refs\/heads\//} == develop ]]; then
            docker buildx imagetools create -t ${IMAGE}:develop                          ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          fi